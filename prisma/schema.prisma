// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique
  avatarUrl     String
  githubId      Int            @unique
  githubToken   GithubToken?
  neovimConfigs NeovimConfig[]
}

model GithubToken {
  id          Int                     @id @default(autoincrement())
  accessToken String                  
  user        User                    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int                     @unique
  createdAt   DateTime                @default(now())
}

model NeovimConfig {
  id            Int                  @id @default(autoincrement())
  owner         String
  slug          String
  repo          String
  root          String
  initFile      String
  branch        String
  fork          Boolean
  githubId      Int
  stars         Int
  user          User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  pluginManager NeovimPluginManager?
  createdAt     DateTime             @default(now())

  neovimConfigPlugins NeovimConfigPlugins[]

  @@unique([owner, repo, root])
  @@unique([owner, slug])
}

enum NeovimPluginManager {
  Lazy
  Packer
}

model NeovimPlugin {
  id                  Int           @id @default(autoincrement())
  owner               String
  name                String
  type                String
  source              String
  category            String
  link                String
  shortDescription    String
  createdAt           DateTime     @default(now())

  neovimConfigPlugins NeovimConfigPlugins[]

  @@unique([owner, name])
}

model NeovimConfigPlugins {
  config              NeovimConfig @relation(fields: [configId], references: [id], onDelete: Cascade)
  configId            Int
  plugin              NeovimPlugin @relation(fields: [pluginId], references: [id], onDelete: Cascade)
  pluginId            Int
  createdAt           DateTime     @default(now())
  @@id([configId, pluginId])
}
